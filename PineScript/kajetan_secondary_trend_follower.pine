//@version=4
// Copyright (c) 2019-present, Alex Orekhov (everget)
// SuperTrend script may be freely distributed under the terms of the GPL-3.0 license.
study("Kajetan's Trend Follower", overlay=true)

length = input(title="ATR Period", type=input.integer, defval=22)
mult = input(title="ATR Multiplier", type=input.float, step=0.1, defval=3.0)
wicks = input(title="Take Wicks into Account ?", type=input.bool, defval=false)
showLabels = input(title="Show Buy/Sell Labels ?", type=input.bool, defval=true)
highlightState = input(title="Highlight State ?", type=input.bool, defval=true)

atr = mult * atr(length)

longStop = hl2 - atr
longStopPrev = nz(longStop[1], longStop)
longStop := (wicks ? low[1] : close[1]) > longStopPrev ? max(longStop, longStopPrev) : longStop

shortStop = hl2 + atr
shortStopPrev = nz(shortStop[1], shortStop)
shortStop := (wicks ? high[1] : close[1]) < shortStopPrev ? min(shortStop, shortStopPrev) : shortStop

dir = 1
dir := nz(dir[1], dir)
dir := dir == -1 and (wicks ? high : close) > shortStopPrev ? 1 : dir == 1 and (wicks ? low : close) < longStopPrev ? -1 : dir

longColor = color.green
shortColor = color.red
noneColor = color.new(color.white, 100)

longStopPlot = plot(dir == 1 ? longStop : na, title="Long Stop", style=plot.style_linebr, linewidth=2, color=longColor)
buySignal = dir == 1 and dir[1] == -1
plotshape(buySignal ? longStop : na, title="Long Stop Start", location=location.absolute, style=shape.circle, size=size.tiny, color=longColor, transp=0)
plotshape(buySignal and showLabels ? longStop : na, title="Buy Label", text="Buy", location=location.absolute, style=shape.labelup, size=size.tiny, color=longColor, textcolor=color.white, transp=0)

shortStopPlot = plot(dir == 1 ? na : shortStop, title="Short Stop", style=plot.style_linebr, linewidth=2, color=shortColor)
sellSignal = dir == -1 and dir[1] == 1
plotshape(sellSignal ? shortStop : na, title="Short Stop Start", location=location.absolute, style=shape.circle, size=size.tiny, color=shortColor, transp=0)
plotshape(sellSignal and showLabels ? shortStop : na, title="Sell Label", text="Sell", location=location.absolute, style=shape.labeldown, size=size.tiny, color=shortColor, textcolor=color.white, transp=0)

midPricePlot = plot(ohlc4, title="", style=plot.style_circles, linewidth=0)

longFillColor = highlightState ? (dir == 1 ? longColor : noneColor) : noneColor
shortFillColor = highlightState ? (dir == -1 ? shortColor : noneColor) : noneColor
fill(midPricePlot, longStopPlot, title="Long State Filling", color=longFillColor)
fill(midPricePlot, shortStopPlot, title="Short State Filling", color=shortFillColor)

alertcondition(buySignal, title="SuperTrend Buy", message="SuperTrend Buy!")
alertcondition(sellSignal, title="SuperTrend Sell", message="SuperTrend Sell!")

changeCond = dir != dir[1]
alertcondition(changeCond, title="SuperTrend Direction Change", message="SuperTrend has changed direction!")


// *** Ichimoku Component ***

//Created By User ChrisMoody
//Last Update 10/20/2014
//new Updates include Cloud Color Change based on Trend.based on Trend
//Added ability to turn on/off Tenkan-Sen (9 Period), Kinjun-Sen (26 Period), Chinkou Span (Lagging Line), and "Cloud"
//Correct Plot Names for Alerts
turningPeriods = input(9, minval=1, title="Tenkan-Sen")
standardPeriods = input(26, minval=1, title="Kinjun-Sen")
leadingSpan2Periods = input(52, minval=1, title="Senkou Span B")
displacement = input(26, minval=1, title="-ChinkouSpan/+SenkouSpan A")
sts = input(true, title="Show Tenkan-Sen (9 Period)?")
sks = input(true, title="Show Kinjun-Sen (26 Period)?")
sll = input(false, title="Show Chinkou Span (Lagging Line)?")
sc = input(true, title="Show Cloud?")
cr1 = input(false, title="Show Crosses up/down Tenkan-Sen (9 Period) and Kinjun-Sen (26 Period?")

//Definitions for Tenkan-Sen (9 Period), Kinjun-Sen (26 Period), Chinkou Span (Lagging Line)
donchian(len) =>
    avg(lowest(len), highest(len))
turning = donchian(turningPeriods)
standard = donchian(standardPeriods)
leadingSpan1 = avg(turning, standard)
leadingSpan2 = donchian(leadingSpan2Periods)

//Crosses up/down Tenkan-Sen (9 Period) and Kinjun-Sen (26 Period)
crossUpTenkanKinjun = turning[1] < standard[1] and turning > standard ? 1 : 0
crossDnTenkanKinjun = turning[1] > standard[1] and turning < standard ? 1 : 0
cupA = crossUpTenkanKinjun == 1 ? crossUpTenkanKinjun : 0
cdnB = crossDnTenkanKinjun == 1 ? crossDnTenkanKinjun : 0

//First Definition for Ability to Color Cloud based on Trend.
leadingSpan1Above = leadingSpan1 >= leadingSpan2 ? 1 : na
leadingSpan2Below = leadingSpan1 <= leadingSpan2 ? 1 : na
//Next 4 lines are code used as plots in order to Color Cloud based on Trend
span1plotU = leadingSpan1Above ? leadingSpan1 : na
span2plotU = leadingSpan1Above ? leadingSpan2 : na

span1plotD = leadingSpan2Below ? leadingSpan1 : na
span2plotD = leadingSpan2Below ? leadingSpan2 : na

col = leadingSpan1 >= leadingSpan2 ? color.lime : color.red

//plots for 3 lines other than cloud.
plot(sts and turning ? turning : na, title='Tenkan-Sen (9 Period)', linewidth=3, color=color.lime)
plot(sks and standard ? standard : na, title='Kinjun-Sen (26 Period)', linewidth=3, color=color.fuchsia)
plot(sll and close ? close : na, title='Chinkou Span (Lagging Line)', linewidth=3, offset=-displacement, color=color.aqua)
//Cloud Lines Plot Statements - ***Regular Lines to Fill in Break in Gap
plot(sc and leadingSpan1 ? leadingSpan1 : na, title='Senkou Span A (26 Period) Cloud', style=plot.style_line, linewidth=2, offset=displacement, color=col)
plot(sc and leadingSpan2 ? leadingSpan2 : na, title='Senkou Span B (52 Period) Cloud', style=plot.style_line, linewidth=2, offset=displacement, color=col)
//Cloud Lines Plot Statements - ***linebr to create rules for change in Shading
p1 = plot(sc and span1plotU ? span1plotU : na, title='Senkou Span A (26 Period) Above Span B Cloud', style=plot.style_linebr, linewidth=2, offset=displacement, color=col)
p2 = plot(sc and span2plotU ? span2plotU : na, title='Senkou Span B (52 Period) Below Span A Cloud', style=plot.style_linebr, linewidth=2, offset=displacement, color=col)
p3 = plot(sc and span1plotD ? span1plotD : na, title='Senkou Span A (26 Period) Below Span B Cloud', style=plot.style_linebr, linewidth=2, offset=displacement, color=col)
p4 = plot(sc and span2plotD ? span2plotD : na, title='Senkou Span B (52 Period) Above Span A Cloud', style=plot.style_linebr, linewidth=2, offset=displacement, color=col)
//Fills that color cloud based on Trend.
fill(p1, p2, color=color.lime, transp=70, title='Kumo (Cloud)')
fill(p3, p4, color=color.red, transp=70, title='Kumo (Cloud)')
//Arrow Plots At Tenkan-Sen (9 Period) and Kinjun-Sen (26 Period)
plotarrow(cr1 and cupA ? cupA : na, title="CrossUp Tenkan Kinjun Entry Arrow", colorup=color.yellow, maxheight=90, minheight=50, transp=0)
plotarrow(cr1 and cdnB * -1 ? cdnB * -1 : na, title="CrossDn Tenkan Kinjun Entry Arrow", colordown=color.yellow, maxheight=90, minheight=50, transp=0)

// *** Forex Sessions ***

t1 = time(timeframe.period, "0300-1200")
t2 = time(timeframe.period, "0800-1700")
London = na(t1) ? na : color.green
NY = na(t2) ? na : color.red

bgcolor(London, title="London")
bgcolor(NY, title="New York")
